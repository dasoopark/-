package algorithm_Study.DFS_BFS_sec8;

import java.util.Scanner;

/*
 10 이하의 N개의 자연수가 주어지면 이 중 M개를 뽑아 일렬로 나열하는 방법을 모두 출력합니다.


입력설명
첫 번째 줄에 자연수 N(3<=N<=10)과 M (2<=M<=N)이 주어집니다.
두 번째 줄에 N개의 자연수가 오름차순으로 주어집니다.

출력설명 
첫 번째 줄에 결과를 출력합니다.
출력순서는 사전순으로 오름차순으로 출력합니다.

입력예제 1
3 2
3 6 9

출력예제 1
3 6
3 9
6 3
6 9
9 3 
9 6
// 순열은 중복해서 뽑으면 안 됨(3,3 x)


 */
public class nodup_permutation_06 {

	static int[] pm, ch, arr;
	static int n, m;
	static void DFS(int L)
	{
		
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner kb = new Scanner(System.in);
		n = kb.nextInt();
		m = kb.nextInt();
		arr = new int[n];
		for(int i = 0; i< n; i++)
		{
			arr[i] = kb.nextInt();
		}
		ch = new int[n];
		pm = new int[m];
		DFS(0);
	}

}
